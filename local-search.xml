<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/12/10/hello-world/"/>
    <url>/2022/12/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>linux 内核调试配置</title>
    <link href="/2022/12/10/linux-%E5%86%85%E6%A0%B8%E8%B0%83%E8%AF%95%E9%85%8D%E7%BD%AE/"/>
    <url>/2022/12/10/linux-%E5%86%85%E6%A0%B8%E8%B0%83%E8%AF%95%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="调试linux内核"><a href="#调试linux内核" class="headerlink" title="调试linux内核"></a>调试linux内核</h1><h2 id="调试系统环境"><a href="#调试系统环境" class="headerlink" title="调试系统环境"></a>调试系统环境</h2><ul><li>CPU amd64</li><li>虚拟机ubuntu20.04</li></ul><h2 id="编译linux内核"><a href="#编译linux内核" class="headerlink" title="编译linux内核"></a>编译linux内核</h2><h3 id="1-安装编译工具链"><a href="#1-安装编译工具链" class="headerlink" title="1. 安装编译工具链"></a>1. 安装编译工具链</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo apt-get install libncurses5-dev  build-essential git bison flex libssl-dev<br></code></pre></td></tr></table></figure><h3 id="2-下载对应版本的linux内核"><a href="#2-下载对应版本的linux内核" class="headerlink" title="2. 下载对应版本的linux内核"></a>2. 下载对应版本的linux内核</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.10.129.tar.xz<br>tar -xjf linux-5.10.129.tar.xz<br><span class="hljs-built_in">cd</span> linux-5.10.129<br></code></pre></td></tr></table></figure><h3 id="3-配置linux内核，添加调试信息"><a href="#3-配置linux内核，添加调试信息" class="headerlink" title="3. 配置linux内核，添加调试信息"></a>3. 配置linux内核，添加调试信息</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">make defconfig ARCH=x86_64 ./scripts/config -e DEBUG_INFO -e DEBUG_KERNEL -e DEBUG_INFO_DWARF4<br></code></pre></td></tr></table></figure><h3 id="4-编译linux内核"><a href="#4-编译linux内核" class="headerlink" title="4. 编译linux内核"></a>4. 编译linux内核</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">make ARCH=x86_64 Image -j8<br></code></pre></td></tr></table></figure><p>编译完成后，会在x86目录下生成Image镜像</p><!-- make ARCH=x86_64 Image -j8 CROSS_COMPILE=aarch64-linux-gnu- --><h2 id="制作根文件系统"><a href="#制作根文件系统" class="headerlink" title="制作根文件系统"></a>制作根文件系统</h2><p>linux的启动需要配合根文件系统，这里我们利用busybox来制作一个简单的根文件系统</p><h3 id="1-下载-busybox"><a href="#1-下载-busybox" class="headerlink" title="1. 下载 busybox"></a>1. 下载 busybox</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget https://busybox.net/downloads/busybox-1.35.0.tar.bz2<br>tar -xjf busybox-1.35.0.tar.bz2<br><span class="hljs-built_in">cd</span> busybox-1.35.0<br></code></pre></td></tr></table></figure><h3 id="2-配置-busybox"><a href="#2-配置-busybox" class="headerlink" title="2. 配置 busybox"></a>2. 配置 busybox</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">make menuconfig<br>Settings ---&gt;<br> [*] Build static binary (no shared libs) <br></code></pre></td></tr></table></figure><h3 id="3-明确目标架构"><a href="#3-明确目标架构" class="headerlink" title="3. 明确目标架构"></a>3. 明确目标架构</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">export</span> ARCH=x86_64<br></code></pre></td></tr></table></figure><!-- export CROSS_COMPILE=aarch64-linux-gnu- --><h3 id="4-编译-busybox"><a href="#4-编译-busybox" class="headerlink" title="4. 编译 busybox"></a>4. 编译 busybox</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">make &amp;&amp; make install<br></code></pre></td></tr></table></figure><p>编译完成后，会生成_install目录</p><h2 id="配置文件系统"><a href="#配置文件系统" class="headerlink" title="配置文件系统"></a>配置文件系统</h2><h3 id="1-Add-etc-dev-and-lib-directories"><a href="#1-Add-etc-dev-and-lib-directories" class="headerlink" title="1. Add etc, dev and lib directories"></a>1. Add etc, dev and lib directories</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> _install<br><span class="hljs-built_in">mkdir</span> etc dev lib mnt<br></code></pre></td></tr></table></figure><h3 id="2-etc-x2F-profile"><a href="#2-etc-x2F-profile" class="headerlink" title="2. etc&#x2F;profile"></a>2. etc&#x2F;profile</h3><p>busybox 作为linuxrc启动后， 会读取&#x2F;etc&#x2F;profile, 这里面设置了一些环境变量和shell的属性</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/sh</span><br><span class="hljs-built_in">export</span> HOSTNAME=lifan<br><span class="hljs-built_in">export</span> USER=root<br><span class="hljs-built_in">export</span> HOME=/home<br><span class="hljs-built_in">export</span> PS1=<span class="hljs-string">&quot;[<span class="hljs-variable">$USER</span>@<span class="hljs-variable">$HOSTNAME</span> \W]\# &quot;</span><br>PATH=/bin:/sbin:/usr/bin:/usr/sbin<br>LD_LIBRARY_PATH=/lib:/usr/lib:<span class="hljs-variable">$LD_LIBRARY_PATH</span><br><span class="hljs-built_in">export</span> PATH LD_LIBRARY_PATH<br></code></pre></td></tr></table></figure><h3 id="3-etc-x2F-inittab"><a href="#3-etc-x2F-inittab" class="headerlink" title="3. etc&#x2F;inittab"></a>3. etc&#x2F;inittab</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/sh</span><br>::sysinit:/etc/init.d/rcS<br>::respawn:-/bin/sh<br>::askfirst:-/bin/sh<br>::ctrlaltdel:/bin/umount -a -r<br></code></pre></td></tr></table></figure><h3 id="4-etc-x2F-fstab"><a href="#4-etc-x2F-fstab" class="headerlink" title="4. etc&#x2F;fstab"></a>4. etc&#x2F;fstab</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#device  mount-point    type     options   dump   fsck order</span><br>proc /proc proc defaults 0 0<br>tmpfs /tmp tmpfs defaults 0 0<br>sysfs /sys sysfs defaults 0 0<br>tmpfs /dev tmpfs defaults 0 0<br>debugfs /sys/kernel/debug debugfs defaults 0 0<br>kmod_mount /mnt 9p trans=virtio 0 0<br></code></pre></td></tr></table></figure><h3 id="5-etc-x2F-init-d-x2F-rcS"><a href="#5-etc-x2F-init-d-x2F-rcS" class="headerlink" title="5. etc&#x2F;init.d&#x2F;rcS"></a>5. etc&#x2F;init.d&#x2F;rcS</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> -p /sys<br><span class="hljs-built_in">mkdir</span> -p /tmp<br><span class="hljs-built_in">mkdir</span> -p /proc<br><span class="hljs-built_in">mkdir</span> -p /mnt<br>/bin/mount -a<br><span class="hljs-built_in">mkdir</span> -p /dev/pts<br>mount -t devpts devpts /dev/pts<br><span class="hljs-built_in">echo</span> /sbin/mdev &gt; /proc/sys/kernel/hotplug<br>mdev -s<br></code></pre></td></tr></table></figure><h4 id="update-permissions"><a href="#update-permissions" class="headerlink" title="update permissions"></a>update permissions</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">chmod</span> +x etc/init.d/rcS<br></code></pre></td></tr></table></figure><h3 id="6-Add-dev-file"><a href="#6-Add-dev-file" class="headerlink" title="6. Add dev file"></a>6. Add dev file</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo <span class="hljs-built_in">mknod</span> console c 5 1<br>sudo <span class="hljs-built_in">mknod</span> -m 666 null c 1 3 <br></code></pre></td></tr></table></figure><!-- ### 7. Add dynamic library<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cp</span> /usr/lib/gcc/aarch64-linux-gnu/9/*.so*  -a ./lib<br>``` --&gt;<br><br><span class="hljs-comment">### 7.compressed file system</span><br>```sh<br>find . -print0 | cpio --null -ov --format=newc | gzip -9 &gt; ../initramfs.cpio.gz<br></code></pre></td></tr></table></figure><p>这里对这几个文件做一点说明：</p><ol><li>busybox 作为linuxrc启动后， 会读取&#x2F;etc&#x2F;profile, 这里面设置了一些环境变量和shell的属性</li><li>根据&#x2F;etc&#x2F;fstab提供的挂载信息， 进行文件系统的挂载</li><li>busybox会从&#x2F;etc&#x2F;inittab中读取sysinit并执行， 这里sysinit指向了&#x2F;etc&#x2F;init.d&#x2F;rcS</li><li>&#x2F;etc&#x2F;init.d&#x2F;rcS 中 ，mdev -s 这条命令很重要， 它会扫描&#x2F;sys目录，查找字符设备和块设备，并在&#x2F;dev下mknod</li></ol><h2 id="用qemu启动linux内核"><a href="#用qemu启动linux内核" class="headerlink" title="用qemu启动linux内核"></a>用qemu启动linux内核</h2><h3 id="1-安装qemu子系统"><a href="#1-安装qemu子系统" class="headerlink" title="1.安装qemu子系统"></a>1.安装qemu子系统</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo apt-get install qemu-system-x86_64<br></code></pre></td></tr></table></figure><h3 id="2-启动qemu"><a href="#2-启动qemu" class="headerlink" title="2. 启动qemu"></a>2. 启动qemu</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh">qemu-system-x86_64 \<br>    -kernel Image \<br>    -initrd initramfs.cpio.gz \<br>    -m 1024M -smp 1 \<br>-net nic -net user \<br>    -nographic -serial mon:stdio \<br>    -append <span class="hljs-string">&quot;root=/dev/ram rdinit=/linuxrc nokaslr console=ttyAMA0 loglevel=8&quot;</span> \<br>    -S -s<br></code></pre></td></tr></table></figure><p>qemu启动成功后，会等待gdb连接</p><h3 id="3-启动gdb"><a href="#3-启动gdb" class="headerlink" title="3. 启动gdb"></a>3. 启动gdb</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">gdb<br><span class="hljs-comment"># 加载符号文件</span><br>file linux-5.10.129/vmlinux<br><span class="hljs-comment"># 连接qemu</span><br>gdb-remote 1234<br><span class="hljs-comment"># 连接成功即可开始调试</span><br>b start_kernel<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux内核</category>
      
    </categories>
    
    
    <tags>
      
      <tag>调试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>database system readings</title>
    <link href="/2022/12/10/database-system-readings/"/>
    <url>/2022/12/10/database-system-readings/</url>
    
    <content type="html"><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>This is a curated reading list about database systems, including personal digests of books&#x2F;papers&#x2F;blogs.</p><p>Booklist can be found in README, while paper and blog digests are located in the issue list.</p><p>In the issue list, a closed issue means that the digest about it was finished, while an open one means that the digest is to-be-appeared or on-the-flying.</p><p>For each paper digest, I try to answer the following questions:</p><ul><li>What problem does the paper solve? Is it important?</li><li>How does it solve the problem? Any approaches new?</li><li>What could be improved?</li><li>Anything interesting about it?</li></ul><h1 id="Books"><a href="#Books" class="headerlink" title="Books"></a>Books</h1><ul><li>Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems</li><li>Streaming Systems: The What, Where, When, and How of Large-Scale Data Processing</li><li>Stream Processing with Apache Flink</li></ul><h1 id="PhD-Thesis"><a href="#PhD-Thesis" class="headerlink" title="PhD Thesis"></a>PhD Thesis</h1><ul><li><a href="https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-935.pdf">Distributed consensus revised</a></li></ul><h1 id="Papers"><a href="#Papers" class="headerlink" title="Papers"></a>Papers</h1>]]></content>
    
    
    <categories>
      
      <category>分布式系统</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
